# mp.messaging.incoming.words-in.topic=words
# mp.messaging.outgoing.words-out.topic=words
#mp.messaging.incoming.words-in.auto.offset.reset=earliest

#postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/cqrs_kafka_db
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

#kafka

# Incoming channel (consuming from "screen-events" topic)
mp.messaging.incoming.screen-events.connector=smallrye-kafka
mp.messaging.incoming.screen-events.topic=screen-events
mp.messaging.incoming.screen-events.value.deserializer=org.master.events.screen.ScreenEventDeserializer

# Outgoing channel (producing to "screen-commands" topic)
mp.messaging.outgoing.screens.connector=smallrye-kafka
mp.messaging.outgoing.screens.topic=screen-commands
mp.messaging.outgoing.screens.value.serializer=org.master.events.screen.ScreenEventSerializer

# OpenAPI configuration
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD
quarkus.http.auth.basic=true

# Basic Authentication with Elytron
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true

# Define users and roles (these are static users for demo purposes, you can replace this with DB authentication)
quarkus.security.users.embedded.users.admin=password
quarkus.security.users.embedded.roles.admin=admin,user
