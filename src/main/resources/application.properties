# mp.messaging.incoming.words-in.topic=words
# mp.messaging.outgoing.words-out.topic=words
#mp.messaging.incoming.words-in.auto.offset.reset=earliest

#postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/cqrs_kafka_db
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

#kafka

# Incoming channel (consuming from "screen-events" topic)
mp.messaging.incoming.screen-events.connector=smallrye-kafka
mp.messaging.incoming.screen-events.topic=screen-events
mp.messaging.incoming.screen-events.value.deserializer=org.master.events.EventDeserializer

# Outgoing channel (producing to "screen-commands" topic)
mp.messaging.outgoing.screens.connector=smallrye-kafka
mp.messaging.outgoing.screens.topic=screen-commands
mp.messaging.outgoing.screens.value.serializer=org.master.events.EventSerializer

# Incoming channel (consuming from "script-events" topic)
mp.messaging.incoming.script-events.connector=smallrye-kafka
mp.messaging.incoming.script-events.topic=script-events
mp.messaging.incoming.script-events.value.deserializer=org.master.events.EventDeserializer

# Outgoing channel (producing to "script-commands" topic)
mp.messaging.outgoing.scripts.connector=smallrye-kafka
mp.messaging.outgoing.scripts.topic=script-commands
mp.messaging.outgoing.scripts.value.serializer=org.master.events.EventSerializer

# OpenAPI configuration
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
quarkus.http.auth.basic=true